- name: Secure VM Configuration
  hosts: virtualmachines
  become: yes
  gather_facts: yes

  roles:
    - role: robertdebock.fail2ban

  vars:
    node_exporter_version: 1.5.0

  tasks:

  # install requirements
  - name: Install list of packages
    apt: name={{item}} state=present
    with_items:
    - python3-pip
    - firewalld
    - zip
    - nmap
    - chkrootkit
    - rkhunter
    - tiger
    - net-tools
    - curl

  - name: Install firewall python package
    ansible.builtin.pip:
      name: firewall

  # Gather facts
  - name: Gather facts on listening ports
    community.general.listen_ports_facts:

  # firewalld
  - name: FirewallD rules
    ansible.posix.firewalld:
      permanent: yes
      immediate: yes
      port: "{{ item }}"
      state: enabled
    with_items:
    - ssh/tcp
    - 9090/tcp
    - 9200/tcp

  - name: Add ports to firewall
    firewalld:
      port: "{{ item }}/tcp"
      state: enabled
      immediate: true
      permanent: true
    loop: "{{ ansible_facts.tcp_listen  | map(attribute='port') | sort | list }}"
    register: ports_added_to_firewalld

  # node_exporter
  - name: Add the user 'node_exporter'
    ansible.builtin.user:
      name: node_exporter
      comment: node_exporter user account
      password: $6$DGg/v0yg3xbvYVPd$8fqv09WGDWe6PouCFY0OQ/K54/th7KetQZv8w5waZvlZ08XP7hjdGYwIbv8r5FdEaZdpOaQAMYt.QbRRzJlrW1
  - name: download node exporter
    get_url:
      url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
      dest: /tmp
  - name: unarchive node exporter
    unarchive:
      remote_src: yes
      src: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
      dest: /tmp
  - name: move node exporter to /usr/bin
    copy:
      src: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter
      dest: /usr/bin/node_exporter
      remote_src: yes
      owner: node_exporter
      group: node_exporter
      mode: 0755
  - name: install unit file to systemd
    template:
      src: templates/node_exporter/node_exporter.service
      dest: /usr/lib/systemd/system/node_exporter.service
      owner: root
      group: root
      mode: 0600
  - name: configure systemd to use service
    systemd:
      daemon_reload: yes
      enabled: yes
      state: restarted
      name: node_exporter.service
  - name: Creates node_exporter config directory
    file:
      path: /etc/node_exporter
      state: directory
      owner: node_exporter
      group: node_exporter
  - name: copy cert file for web access
    template:
      src: templates/common/certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
      dest: /etc/node_exporter/node_exporter.crt
      owner: node_exporter
      group: node_exporter
      mode: 0600
  - name: copy key file for web access
    template:
      src: templates/common/certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
      dest: /etc/node_exporter/node_exporter.key
      owner: node_exporter
      group: node_exporter
      mode: 0600
  - name: copy web config file for node_exporter
    template:
      src: templates/node_exporter/config.yml
      dest: /etc/node_exporter/config.yml
      owner: node_exporter
      group: node_exporter
      mode: 0600
  - name: Start node_exporter
    ansible.builtin.systemd:
      state: started
      daemon_reload: yes
      enabled: yes
      name: node_exporter

  # prometheus
  - name: update and install prometheus
    apt:
      name: prometheus
      state: latest
      update_cache: false
  - name: Add the user 'prometheus'
    ansible.builtin.user:
      name: prometheus
      comment: prometheus user account
      password: $6$DGg/v0yg3xbvYVPd$8fqv09WGDWe6PouCFY0OQ/K54/th7KetQZv8w5waZvlZ08XP7hjdGYwIbv8r5FdEaZdpOaQAMYt.QbRRzJlrW1
  - name: copy config file for prometheus
    template:
      src: templates/prometheus/prometheus.yml
      dest: /etc/prometheus/prometheus.yml
      owner: prometheus
      group: prometheus
      mode: 0600
  - name: copy web config file for prometheus
    template:
      src: templates/prometheus/web-config.yml
      dest: /etc/prometheus/web-config.yml
      owner: prometheus
      group: prometheus
      mode: 0600
  - name: copy cert file for web access
    template:
      src: templates/common/certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
      dest: /etc/prometheus/prometheus.crt
      owner: prometheus
      group: prometheus
      mode: 0600
  - name: copy key file for web access
    template:
      src: templates/common/certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
      dest: /etc/prometheus/prometheus.key
      owner: prometheus
      group: prometheus
      mode: 0600
  - name: install unit file to systemd
    template:
      src: templates/prometheus/prometheus.service
      dest: /usr/lib/systemd/system/prometheus.service
      owner: root
      group: root
      mode: 0600
  - name: start prometheus
    systemd:
      name: prometheus
      state: restarted
      enabled: yes
      daemon_reload: yes

  # rkhunter
  - name: rkhunter | Make sure rkhunter has latest defs
    command: rkhunter --propupd
    changed_when: False
  - name: copy rkhunter config
    template:
      src: templates/rkhunter/rkhunter
      dest: /etc/default/rkhunter
  - name: copy rkhunter default config
    template:
      src: templates/rkhunter/rkhunter
      dest: /etc/default/rkhunter
  - name: copy rkhunter etc config
    template:
      src: templates/rkhunter/rkhunter.conf
      dest: /etc/rkhunter.conf

  # LMD
  - name: Create LMD's download dir
    file:
      path: /tmp/downloads/maldet
      state: directory
      recurse: yes
  - name: Maldet | download the Linux Malware Detect tar.gz file from rfxn.com
    get_url:
      url=http://www.rfxn.com/downloads/maldetect-current.tar.gz
      dest="/tmp/downloads/maldetect-current.tar.gz"
  - name: Maldet | Unarchive copied package
    unarchive:
      src: /tmp/downloads/maldetect-current.tar.gz
      dest: /tmp/downloads/maldet
      extra_opts: [--strip-components=1]
      copy: no
  - name: Maldet | Install Linux Malware Detect
    shell: /tmp/downloads/maldet/install.sh chdir=/tmp/downloads/maldet/
    changed_when: False
  - name: Maldet | Add maldet to crontab at a random hour
    cron: name="Run Maldet" hour="{{ 0 }}" minute="{{ 20 }}" job="maldet -b -r /" state=present
    changed_when: False
  - name: copy maldet configuration file
    template:
      src: templates/maldet/conf.maldet
      dest: /usr/local/maldetect/conf.maldet
      owner: root
      group: root
      mode: 0755

  # Lynis
  - name: Lynis | Create Lynis's download dir
    file:
      path: /tmp/downloads/lynis
      state: directory
      recurse: yes
  - name: Lynis | Grab the latest Lynis
    get_url:
      url: https://downloads.cisofy.com/lynis/lynis-3.0.8.tar.gz
      dest: /tmp/downloads
  - name: Lynis | Unarchive copied package
    unarchive:
      src: /tmp/downloads/lynis-3.0.8.tar.gz
      dest: /tmp/downloads
      copy: no
  - name: Lynis | Install Lynis
    command: mv /tmp/downloads/lynis /usr/local/lynis creates=/usr/local/lynis
  - name: Lynis | Add Lynis to crontab at a random hour
    cron: name="Run Lynis" hour="{{ 4|random}}" minute="{{ 59 |random}}" job="/usr/local/lynis/lynis -c --cronjob --upload --profile /usr/local/lynis/custom.prf" state=present
    changed_when: False
